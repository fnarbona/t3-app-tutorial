// next
import Head from "next/head";
import Image from "next/image";

// components
import LoadingPage from "~/components/Loading";
import { SignInButton, useUser } from "@clerk/nextjs";

// utils
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { RouterOutputs, api } from "~/utils/api";

dayjs.extend(relativeTime);

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-4 border-b-2 border-slate-500 p-4">
      <Image
        src={author.imageUrl}
        className="rounded-full"
        width={48}
        height={48}
        alt={`${author.username}'s profile picture`}
      />
      <div>
        <div className="flex gap-1 text-slate-500">
          <span>{`@${author?.username}`}</span>
          <span>-</span>
          <span>{`${dayjs(post?.createdAt).fromNow()}`}</span>
        </div>
        <span className="text-white">{post.content}</span>
      </div>
    </div>
  );
};

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;
  console.log(user);
  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.imageUrl}
        className="rounded-full"
        width={48}
        height={48}
        alt="Profile image"
      />
      <input
        placeholder="Type some emojis!"
        className="grow rounded-md bg-transparent p-2 text-white outline-none"
      />
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  return (
    <div className="w-full">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};
export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  // fetch is cached, so we don't need to capture it for Feed component
  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-500 md:max-w-2xl">
          <div className="flex border-b border-slate-500 p-4">
            {!isSignedIn && <SignInButton />}
            {!!isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
